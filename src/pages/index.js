import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Navbar from "@/components/Navbar";
import SendFromVaultForm from "@/components/SendFromVaultForm";
import SendToVaultForm from "@/components/SendtoVaultForm";
import { useEffect, useState } from "react";
import { getAlgodClient } from "../clients";
import { useWallet } from "@txnlab/use-wallet";

const network = process.env.NEXT_PUBLIC_NETWORK || "SandNet";
const algodClient = getAlgodClient(network);

export default function Home() {
  const [vaultAssets, setVaultAssets] = useState([]);
  const [vaultAlgos, setVaultAlgos] = useState(0);
  const [txnref, setTxnRef] = useState("");
  const [txnUrl, setTxnUrl] = useState("");
  const { activeAddress } = useWallet();

  useEffect(() => {
    // fetch vault contract details here
  }, []);

  const getTxnRefUrl = (txId) => {
    if (network === "SandNet") {
      return `https://app.dappflow.org/explorer/transaction/${txId}`;
    } else if (network === "TestNet") {
      return `https://testnet.algoexplorer.io/tx/${txId}`;
    }

    return "";
  };

  const handleSendFromVault = (assetId, receiver, closeOutAsset) => {
    // add logic to send asset from the vault
    console.log(assetId, receiver, closeOutAsset);
  };

  const handleSendToVault = (assetId) => {
    // add logic to send asset to the vault
    console.log(assetId);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className={styles.main}>
        <div>
          <h1 className="text-5xl mb-4">Vault Dapp</h1>
          <h4 className="mb-4">Network: {network}</h4>
          <h4 className="mb-4">No. of vault assets: {vaultAssets.length}</h4>
          <h4 className="mb-4">Vault Algos: {vaultAlgos}</h4>
        </div>
        <div>
          {activeAddress && txnref && (
            <p className="mb-4 text-left">
              <a href={txnUrl} target="_blank" className="text-blue-500">
                Tx ID: {txnref}
              </a>
            </p>
          )}
        </div>
        <SendFromVaultForm
          assets={vaultAssets}
          onSendFromVault={handleSendFromVault}
        />
        <SendToVaultForm onSendToVault={handleSendToVault} />
      </main>
    </>
  );
}
